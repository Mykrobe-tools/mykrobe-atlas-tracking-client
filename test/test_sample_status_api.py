# coding: utf-8

"""
    Tracking API

    <p>An API for CRUD of sample tracking information for Mykrobe Atlas project <p>This API is intended to satisfy the following user stories <li> Atlas user wants to know the sample status so that I can know if specific results are available <li> Atlas user wants to know QC results for a sample so that I can know if a specific sample has passed QC check <li> Atlas user wants to deprecate a sample so that it is no longer available from the Atlas system <li> sample ingestion service wants to know if a sample already exists so that I can decide on rejecting a sample <li> sample ingestion service wants to know if a file already exists so that I can know if this is a new file <li> sample ingestion service wants to add a new sample for tracking so that It can know if the sample is accepted <li> sample processing service wants to add a processing event for a new sample so that the sample can be auditted <li> sampel processing service wants to add QC results for a new sample so that other user can know if the new sample passes the QC check <li> sampel processing service wants to update sample status so that they are up to date <li> sampel processing service wants to update sample's QC results so that they are up to date <li> audit user wants to know all the processing events for a sample so that I can know what happened to a sample  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import openapi_client
from openapi_client.api.sample_status_api import SampleStatusApi  # noqa: E501
from openapi_client.rest import ApiException


class TestSampleStatusApi(unittest.TestCase):
    """SampleStatusApi unit test stubs"""

    def setUp(self):
        self.api = openapi_client.api.sample_status_api.SampleStatusApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_samples_id_status_delete(self):
        """Test case for samples_id_status_delete

        """
        pass

    def test_samples_id_status_get(self):
        """Test case for samples_id_status_get

        """
        pass

    def test_samples_id_status_patch(self):
        """Test case for samples_id_status_patch

        """
        pass

    def test_samples_id_status_put(self):
        """Test case for samples_id_status_put

        """
        pass


if __name__ == '__main__':
    unittest.main()
